
"""
Created on Sat Aug 18 09:41:47 2018

@author: simarjot
"""
import quandl
import pandas as pd
import math

df=quandl.get("NSE/TATASTEEL")

df['HL_PCT'] = (df['High'] - df['Low'])/df['Close'] * 100
df['PCT_change'] = (df['Close'] - df['Open'])/df['Open'] * 100

df = df[['Close','HL_PCT','PCT_change','Total Trade Quantity']]
print(df.head())
forecast_col='Close'
df.fillna(value=-99999, inplace=True)
forecast_out = int(math.ceil(0.01 * len(df)))
df['Future_Price']=df[forecast_col].shift(-forecast_out)
print (df.head())

import numpy as np
from sklearn import preprocessing

X= np.array(df.drop(['Future_Price'], 1))

X = preprocessing.scale(X)
X_lately=X[-forecast_out:]
X=X[:-forecast_out-32]

df.dropna(inplace=True)

y=np.array(df['Future_Price'])
y = y[:-forecast_out]
print(len(X))
print(len(y))

from sklearn import cross_validation

X_train, X_test, y_train, y_test = cross_validation.train_test_split(X,y, test_size=0.2)

from sklearn.linear_model import LinearRegression
clf= LinearRegression()

clf.fit(X_train, y_train)
accuracy = clf.score(X_test, y_test)

print(accuracy)


forecast_set = clf.predict(X_lately)

import datetime
import matplotlib.pyplot as plt
from matplotlib import style

style.use("ggplot")

df['Forecast']=np.nan

last_date = df.iloc[-1].name
last_unix = last_date.timestamp()
oneday= 86400
next_unix = last_unix + oneday

for i in forecast_set:
  next_date = datetime.datetime.fromtimestamp(next_unix)
  next_unix += 86400
  df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)]+[i]
  
df=df.truncate(before='2018-01-01')
print(df.head())

df['Close'].plot()
df['Forecast'].plot()
plt.legend(loc=4)
plt.xlabel('Date')
plt.ylabel('Price')
plt.show()

